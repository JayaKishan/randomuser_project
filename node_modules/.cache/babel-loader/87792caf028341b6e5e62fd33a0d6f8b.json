{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pesto/randomuser_project/src/GetUserData.js\",\n    _s = $RefreshSig$();\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Image, Button, Space, Avatar, Descriptions, Row, Col, Tooltip } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport ReactGoogleMapLoader from \"react-google-maps-loader\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetUserData = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [user, setUser] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n  useEffect(() => {\n    fetchdata();\n  }, []);\n\n  const fetchdata = async () => {\n    const response = await fetch(\"https://randomuser.me/api\");\n    const data = await response.json();\n    console.log(data.results[0]);\n    setData(data.results[0]);\n    setLoadingData(true);\n    title(data);\n  };\n\n  function title(title) {\n    document.title = title.results[0].name.first;\n  }\n\n  const mapStyles = {\n    width: '100%',\n    height: '100%'\n  };\n  const imageStyles = {\n    marginLeft: '200px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loadingData ? /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"search\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              type: \"primary\",\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 90\n              }, this),\n              onClick: () => fetchdata()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: imageStyles,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: 250,\n            src: /*#__PURE__*/_jsxDEV(Image, {\n              src: data.picture.large,\n              style: {\n                width: 300\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Descriptions, {\n            title: data.name.first + \" Details\",\n            bordered: true,\n            column: {\n              xxl: 1,\n              xl: 1,\n              lg: 1,\n              md: 1,\n              sm: 1,\n              xs: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"User Name\",\n              children: [data.name.title, \" \", data.name.first, \" \", data.name.last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Gender\",\n              children: data.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"DOB\",\n              children: data.dob.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Contact\",\n              children: data.cell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Email\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"mailto:\" + data.email,\n                children: data.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Age\",\n              children: data.dob.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Address\",\n              children: [data.location.street.name, \", \", data.location.street.number, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), data.location.state, \", \", data.location.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), data.location.country, \" (\", data.nat, \"), \", data.location.postalcode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Registration\",\n              children: data.registered.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchdata(),\n      children: [\"Refresh Data \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetUserData, \"qgDLxWLGC1h2rA9+PUVYgt7/31I=\");\n\n_c = GetUserData;\nexport default GetUserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUserData\");","map":{"version":3,"sources":["/Users/admin/Desktop/pesto/randomuser_project/src/GetUserData.js"],"names":["Image","Button","Space","Avatar","Descriptions","Row","Col","Tooltip","SearchOutlined","ReactGoogleMapLoader","React","useEffect","useState","GetUserData","data","setData","user","setUser","loadingData","setLoadingData","fetchdata","response","fetch","json","console","log","results","title","document","name","first","mapStyles","width","height","imageStyles","marginLeft","picture","large","xxl","xl","lg","md","sm","xs","last","gender","dob","date","cell","email","age","location","street","number","state","city","country","nat","postalcode","registered"],"mappings":"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","sourcesContent":["import 'antd/dist/antd.css';\nimport './index.css';\nimport { Image, Button, Space, Avatar, Descriptions, Row, Col, Tooltip } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\n\nimport React, { useEffect, useState } from 'react';\n\nconst GetUserData = () => {\n    const [data, setData] = useState([]);\n    const [user, setUser] = useState([]);\n    const [loadingData, setLoadingData] = useState(false);\n    \n    useEffect(() => {\n        fetchdata();\n    }, []);\n\n    \n    const fetchdata = async () => {\n        const response = await fetch(\"https://randomuser.me/api\");\n        const data = await response.json();\n        console.log(data.results[0]);\n        setData(data.results[0]);\n        setLoadingData(true);\n        title(data);\n    };\n\n    function title(title) {\n        document.title = title.results[0].name.first;\n    }\n\n    const mapStyles = {\n        width: '100%',\n        height: '100%'\n    };\n\n    const imageStyles = {\n        marginLeft: '200px'\n    };\n\n\n    return (\n        <div>\n        {loadingData ? (\n                <Row>\n                    <Col span={12}>\n                        <div>\n                            <Tooltip title=\"search\">\n                                <Button size=\"large\" type=\"primary\" shape=\"circle\" icon={<SearchOutlined / >} onClick={() => fetchdata()}/>\n                            </Tooltip>\n                        </div>\n                        <div style={imageStyles}><Avatar size={250} src={<Image src={data.picture.large}  style={{ width: 300 }} />} /></div>\n                        <div>\n                        <Descriptions\n                            title={data.name.first  + \" Details\"}\n                            bordered\n                            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n                            >\n                            <Descriptions.Item label=\"User Name\">{data.name.title} {data.name.first} {data.name.last}</Descriptions.Item>\n                            <Descriptions.Item label=\"Gender\">{data.gender}</Descriptions.Item>\n                            <Descriptions.Item label=\"DOB\">{data.dob.date}</Descriptions.Item>\n                            <Descriptions.Item label=\"Contact\">{data.cell}</Descriptions.Item>\n                            <Descriptions.Item label=\"Email\"><a href={\"mailto:\" + data.email}>{data.email}</a></Descriptions.Item>\n                            <Descriptions.Item label=\"Age\">{data.dob.age}</Descriptions.Item>\n                            <Descriptions.Item label=\"Address\">\n                                {data.location.street.name}, {data.location.street.number}\n                                <br />\n                                {data.location.state}, {data.location.city}\n                                <br />\n                                {data.location.country} ({data.nat}), {data.location.postalcode}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Registration\">\n                                {data.registered.date}\n                            </Descriptions.Item>\n                            </Descriptions>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        {/* <ReactGoogleMapLoader\n                                params={{\n                                    key: YOUR_API_KEY, // Define your api key here\n                                    libraries: \"places,geometry\", // To request multiple libraries, separate them with a comma\n                                }}\n                                render={googleMaps => googleMaps && <div>Google Maps is loaded !</div>}\n                            /> */}\n                    </Col>\n                </Row>\n        ) : (\n          <p>No data</p>\n        )}\n        <br/>\n        // <button onClick={() => fetchdata()}>Refresh Data <i className=\"fa fa-refresh\"></i></button>\n      </div>\n    );\n};\n\nexport default GetUserData;"]},"metadata":{},"sourceType":"module"}