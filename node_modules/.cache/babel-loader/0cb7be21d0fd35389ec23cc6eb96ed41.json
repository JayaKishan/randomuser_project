{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pesto/randomuser_project/src/GetUserData.js\",\n    _s = $RefreshSig$();\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Image, Button, Descriptions, Row, Col, Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport MapPicker from 'react-google-map-picker';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DefaultLocation = {\n  lat: 47.9272302,\n  lng: 106.9046525\n};\n\nconst GetUserData = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n  useEffect(() => {\n    fetchdata();\n  }, []);\n\n  const fetchdata = async () => {\n    const response = await fetch(\"https://randomuser.me/api\");\n    const data = await response.json();\n    console.log(data.results[0]);\n    setData(data.results[0]);\n    setLoadingData(true);\n    title(data);\n  };\n\n  function title(title) {\n    document.title = title.results[0].name.first;\n  }\n\n  const imageStyles = {\n    marginLeft: '150px',\n    marginBottom: '30px'\n  };\n  const [defaultLocation, setDefaultLocation] = useState(DefaultLocation);\n  const [location, setLocation] = useState(defaultLocation);\n  const [zoom, setZoom] = useState(DefaultZoom);\n\n  function handleChangeLocation(lat, lng) {\n    setLocation({\n      lat: lat,\n      lng: lng\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loadingData ? /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [20, 20],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"refreshBtn\",\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"refresh\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sixe: \"large\",\n              type: \"primary\",\n              onClick: () => fetchdata(),\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 118\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: imageStyles,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: data.picture.large,\n            style: {\n              width: 300\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Descriptions, {\n            title: data.name.first + \" Details\",\n            style: {\n              textAlign: 'center'\n            },\n            bordered: true,\n            column: {\n              xxl: 1,\n              xl: 1,\n              lg: 1,\n              md: 1,\n              sm: 1,\n              xs: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"User Name\",\n              children: [data.name.title, \". \", data.name.first, \" \", data.name.last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Gender\",\n              children: data.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"DOB\",\n              children: new Date(data.dob.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Contact\",\n              children: data.cell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Email\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"mailto:\" + data.email,\n                children: data.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Age\",\n              children: data.dob.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Address\",\n              children: [data.location.street.name, \", \", data.location.street.number, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), data.location.state, \", \", data.location.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), data.location.country, \" (\", data.nat, \"), \", data.location.postalcode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Registration\",\n              children: new Date(data.registered.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MapPicker, {\n            defaultLocation: defaultLocation,\n            zoom: zoom,\n            onChangeLocation: handleChangeLocation,\n            apiKey: \"AIzaSyAkBhTU6Tc8FNdu64ZRG4rPm2bin7H7OOI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetUserData, \"nJLLb33q8ECbnTUFn63m5Deqkgo=\");\n\n_c = GetUserData;\nexport default GetUserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUserData\");","map":{"version":3,"sources":["/Users/admin/Desktop/pesto/randomuser_project/src/GetUserData.js"],"names":["Image","Button","Descriptions","Row","Col","Tooltip","SyncOutlined","MapPicker","React","useEffect","useState","DefaultLocation","lat","lng","GetUserData","data","setData","loadingData","setLoadingData","fetchdata","response","fetch","json","console","log","results","title","document","name","first","imageStyles","marginLeft","marginBottom","defaultLocation","setDefaultLocation","location","setLocation","zoom","setZoom","DefaultZoom","handleChangeLocation","picture","large","width","textAlign","xxl","xl","lg","md","sm","xs","last","gender","Date","dob","date","toLocaleDateString","cell","email","age","street","number","state","city","country","nat","postalcode","registered"],"mappings":"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","sourcesContent":["import 'antd/dist/antd.css';\nimport './index.css';\nimport { Image, Button, Descriptions, Row, Col, Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\n\n\nimport MapPicker from 'react-google-map-picker'\n\nimport React, { useEffect, useState } from 'react';\n\nconst DefaultLocation = { lat: 47.9272302, lng: 106.9046525 };\n\n\nconst GetUserData = () => {\n    const [data, setData] = useState([]);\n    const [loadingData, setLoadingData] = useState(false);\n    \n    useEffect(() => {\n        fetchdata();\n    }, []);\n\n    \n    const fetchdata = async () => {\n        const response = await fetch(\"https://randomuser.me/api\");\n        const data = await response.json();\n        console.log(data.results[0]);\n        setData(data.results[0]);\n        setLoadingData(true);\n        title(data);\n    };\n\n\n    function title(title) {\n        document.title = title.results[0].name.first;\n    }\n\n\n    const imageStyles = {\n        marginLeft: '150px',\n        marginBottom: '30px'\n    };\n\n    const [defaultLocation, setDefaultLocation] = useState(DefaultLocation);\n\n    const [location, setLocation] = useState(defaultLocation);\n    const [zoom, setZoom] = useState(DefaultZoom);\n\n    function handleChangeLocation(lat, lng) {\n        setLocation({ lat: lat, lng: lng });\n    }\n\n\n\n\n    return (\n        <div>\n        {loadingData ? (\n                <Row gutter={[20, 20]}>\n                    <Col span={12}>\n                        <div className=\"refreshBtn\">\n                            <Tooltip title=\"refresh\">\n                                <Button sixe=\"large\" type=\"primary\" onClick={() => fetchdata()} shape=\"circle\" icon={<SyncOutlined />} />\n                            </Tooltip>\n                        </div>\n                        <div style={imageStyles}><Image src={data.picture.large}  style={{ width: 300 }} /></div>\n                        <div>\n                        <Descriptions\n                            title={data.name.first  + \" Details\"}\n                            style={{textAlign: 'center'}}\n                            bordered\n                            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n                            >\n                            <Descriptions.Item label=\"User Name\">{data.name.title}. {data.name.first} {data.name.last}</Descriptions.Item>\n                            <Descriptions.Item label=\"Gender\">{data.gender}</Descriptions.Item>\n                            <Descriptions.Item label=\"DOB\">{new Date(data.dob.date).toLocaleDateString()}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Contact\">{data.cell}</Descriptions.Item>\n                            <Descriptions.Item label=\"Email\"><a href={\"mailto:\" + data.email}>{data.email}</a></Descriptions.Item>\n                            <Descriptions.Item label=\"Age\">{data.dob.age}</Descriptions.Item>\n                            <Descriptions.Item label=\"Address\">\n                                {data.location.street.name}, {data.location.street.number}\n                                <br />\n                                {data.location.state}, {data.location.city}\n                                <br />\n                                {data.location.country} ({data.nat}), {data.location.postalcode}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Registration\">\n                                {new Date(data.registered.date).toLocaleDateString()}\n                            </Descriptions.Item>\n                            </Descriptions>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        <>\n                            <MapPicker\n                                defaultLocation={defaultLocation}\n                                zoom={zoom}\n                                onChangeLocation={handleChangeLocation}\n                                apiKey=\"AIzaSyAkBhTU6Tc8FNdu64ZRG4rPm2bin7H7OOI\"\n                            />\n                        </>\n                    </Col>\n                </Row>\n        ) : (\n          <p>No data</p>\n        )}\n      </div>\n    );\n};\n\nexport default GetUserData;"]},"metadata":{},"sourceType":"module"}