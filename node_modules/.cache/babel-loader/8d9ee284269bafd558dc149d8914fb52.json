{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pesto/sample/src/GetData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetData = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n  const [user, setUser] = useState([]); // useEffect(() => {\n  //   fetchdata();\n  // }, []);\n\n  useEffect(() => {\n    (async () => {\n      setLoadingData(false);\n      let res = await fetchdata();\n\n      if (res.success) {\n        setUser(res.data.results[0]);\n        setLoadingData(true);\n      }\n    })();\n  }, []);\n\n  const fetchdata = async () => {\n    setLoadingData(true);\n    const response = await fetch(\"https://randomuser.me/api\");\n    const data = await response.json();\n    console.log(data);\n    setData(data);\n    setLoadingData(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-color\",\n    children: [loadingData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Data is here\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), \" \", user.name.first]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), \" \", user.name.last]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), \" \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user found, please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), !loadingData && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchdata(),\n      children: \"new data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this), loadingData && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GetData, \"aMut9abR7hEGoN4fYM3SDgvvSck=\");\n\n_c = GetData;\nexport default GetData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetData\");","map":{"version":3,"sources":["/Users/admin/Desktop/pesto/sample/src/GetData.js"],"names":["React","useEffect","useState","axios","GetData","data","setData","loadingData","setLoadingData","user","setUser","res","fetchdata","success","results","response","fetch","json","console","log","name","first","last","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAHkB,CAMlB;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTO,MAAAA,cAAc,CAAC,KAAD,CAAd;AACF,UAAIG,GAAG,GAAG,MAAMC,SAAS,EAAzB;;AACA,UAAID,GAAG,CAACE,OAAR,EAAiB;AACfH,QAAAA,OAAO,CAACC,GAAG,CAACN,IAAJ,CAASS,OAAT,CAAiB,CAAjB,CAAD,CAAP;AACAN,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KAPD;AAQD,GATM,EASJ,EATI,CAAT;;AAWA,QAAMI,SAAS,GAAG,YAAY;AAC5BJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,CAA5B;AACA,UAAMX,IAAI,GAAG,MAAMU,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eAQGD,WAAW,gBACZ;AAAA,8CAEE;AAAA,+BACA;AAAA,kCACE;AAAA,oCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,OAAkCE,IAAI,CAACW,IAAL,CAAUC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,OAAiCZ,IAAI,CAACW,IAAL,CAAUE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,oCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,OAA6Bb,IAAI,CAACc,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBAYZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,EAsBG,CAAChB,WAAD,iBAAgB;AAAQ,MAAA,OAAO,EAAE,MAAMK,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBnB,EAuBGL,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxDH;;GAAMH,O;;KAAAA,O;AA0DN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\nconst GetData = () => {\n    const [data, setData] = useState([]);\n    const [loadingData, setLoadingData] = useState(false);\n    const [user, setUser] = useState([]);\n    \n  \n    // useEffect(() => {\n    //   fetchdata();\n    // }, []);\n    useEffect(() => {\n        (async () => {\n            setLoadingData(false);\n          let res = await fetchdata();\n          if (res.success) {\n            setUser(res.data.results[0]);\n            setLoadingData(true);\n          }\n        })();\n      }, []);\n  \n    const fetchdata = async () => {\n      setLoadingData(true);\n      const response = await fetch(\"https://randomuser.me/api\");\n      const data = await response.json();\n      console.log(data);\n      setData(data);\n      setLoadingData(true);\n    };\n  \n    return (\n      <div className=\"bg-color\">\n        {/* {data.map(facts => {\n          return (\n            <ul>\n              <li>{facts.text}</li>\n            </ul>\n          );\n        })} */}\n        {loadingData ? (\n        <div>\n          Data is here\n          <div>\n          <ul>\n            <li><strong>First name:</strong> {user.name.first}</li>\n            <li><strong>Last name:</strong> {user.name.last}</li>\n            <li><strong>Email:</strong> {user.email}</li>\n          </ul>\n        </div>\n        </div>\n      ) : (\n        <p>No user found, please try again</p>\n      )}\n        {!loadingData && <button onClick={() => fetchdata()}>new data</button>}\n        {loadingData && <span>Loading...</span>}\n      </div>\n    );\n  };\n\nexport default GetData;"]},"metadata":{},"sourceType":"module"}